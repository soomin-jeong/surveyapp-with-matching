import unittestfrom backend.src.strategies.matchmaking.implemented_strategies.random_matchmaking_strategy import Strategy as s_randomfrom backend.src.strategies.preprocessing.hierarchical_clustering import UserClusterclass RandomMatchingStrategyTest(unittest.TestCase):    def test_random_strategy_returns_existing_user(self):        dummy_cluster = UserCluster(is_root=True)        dummy_cluster.user_ids = [1, 3, 5]        dummy_cluster.user_cnt = 3        random_matching_strategy = s_random(dummy_cluster)        matched_user = random_matching_strategy.get_matched_offline_user()        # though it's random, this test expects the same result because its seed is given        self.assertEqual(matched_user, 5, "The ID of the matched user is different")